# Grid Coordinates

## Sass based CSS Grid Framework Generator (Compass Extension)

Grid Coordinates is a Highly configurable [Sass](http://sass-lang.com/) based CSS Grid Framework Generator delivered as a [Compass](http://compass-style.org/) extension inspired by the [1kb CSS Grid](http://1kbgrid.com/) project by [Tyler Tate](http://twitter.com/tylertate).

## Just the grid please.

Grid Coordinates is quite simple. It's just a grid. And it is able to generate styles for grids of any size - you control the coordinates and it generates the styles.

It fully leverages classes, extends and mixins (if that's your preference) to set up the styles for your grid. It supports nested grids, prefix and suffix grid features as well as push and pull grid features.

## Installation

`gem install grid-coordinates`

Then add `require 'grid-coordinates'` to your Compass config file.

## Usage

Grid-coordinates defaults to create a 960 pixel grid with 12 columns and a 60px gutter. You can override these defaults in your project if this grid doesn't suit your needs.

Use [1kbgrid.com](http://1kbgrid.com) or another grid generator for guidance on configuring your grid's settings.

Take a peek at [grid-coordinates.com/.../demo.sass](https://github.com/adamstac/grid-coordinates.com/blob/master/themes/grid-coordinates/sass/demo.sass) for a demonstration of how to use Grid Coordinates as well its [output CSS](https://github.com/adamstac/grid-coordinates.com/blob/master/themes/grid-coordinates/public/grid-coordinates/css/demo.css).

### Configure as needed and import

    // Configure grid coordinates
    $grid-columns: 24
    $grid-width: 60px
    $grid-gutter-width: 10px
    // Set to true by default. Can be set to false to clip content that overflows a grid block.
    // $overflow: false
    
    @import grid-coordinates
    
    // Only needed if you're using the classes and `@extend` instead of the mixins (suggested)
    +grid-coordinates
    
    ...

The `$overflow` setting controls which of Compass' two clearfix mixins to be used, `+clearfix` or `+pie-clearfix`. The default setting is set to `true` and will not clip any content that overflows a grid block. If for some reason you need to clip overflowing content update this setting to `false`.

### Using classes and `@extend`

When you use the mixin `+grid-coordinates` you are able to leverage the classes in your HTML or use the Sass `extend` option to "extend" the classes in your Sass stylesheets.

For an example of this in use, take a peek at [grid-coordinates.com/.../demo.sass](https://github.com/adamstac/grid-coordinates.com/blob/master/themes/grid-coordinates/sass/demo.sass).

`@extend .grid-container`

`@extend .nested-grid-container`

`@extend .grid-[columns]`

`@extend .grid-prefix-[columns]`

`@extend .grid-prefix-margin-[columns]`

`@extend .grid-suffix-[columns]`

`@extend .grid-suffix-margin-[columns]`

`@extend .grid-push-[columns]`

`@extend .grid-pull-[columns]`

`@extend .grid-full`

### Using the Mixins

Use these mixins in your Sass stylesheets. Keep in mind that when you go the route of using mixins you are replicated much code in your output CSS. It's advised that you to learn the [Sass extend concept](http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#extend) and use that method vs mixins. Your output CSS code with thank you.

`+grid-container`

`+nested-grid-container`

`+grid([columns])`

You can use grid-prefix as an extend `@extend .grid-prefix-margin-3` or as a mixin `+grid-prefix(3,margin)`.

`+grid-prefix([columns], [padding(default)/margin])`

You can use grid-suffix as an extend `@extend .grid-suffix-margin-3` or as a mixin `+grid-suffix(3,margin)`.

`+grid-suffix([columns], [padding(default)/margin])`

`+grid-push([columns])`

`+grid-pull([columns])`

`+grid-full`

## License

Copyright (c) 2009 Adam Stacoviak

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.