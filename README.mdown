# Grid Coordinates

## A Sass based CSS Grid Framework Generator

Grid Coordinates is a highly configurable [Sass](http://sass-lang.com/) based CSS Grid Framework Generator, inspired by [960.gs](http://960.gs/) and [1kb CSS Grid](http://1kbgrid.com/). Grid Coordinates takes the "coordinates" (total columns, grid width, gutter width) and generates the styles required for your grid.

Grid Coordinates can be used as a [Compass](http://compass-style.org/) extension and is delivered as a [Ruby gem](http://rubygems.org/).

## Just the grid

Grid Coordinates does one job - provide a rock solid grid framework. It's able to generate styles for grids of any size - you control the coordinates and it generates the styles.

It fully leverages classes, extends and mixins to set up the styles for your grid. It supports nested grids, prefix and suffix grid features as well as push and pull grid features.

## Installation

`gem install grid-coordinates`

Then add `require 'grid-coordinates'` to your Compass config file.

## Usage

Grid Coordinates defaults to a 960px grid with 12 columns and a 60px gutter (perfect for fans of 960.gs). You can override these defaults in your project if this grid doesn't suit your needs.

Use [1kbgrid.com](http://1kbgrid.com) or another grid generator for guidance on configuring your grid's settings.

Take a peek at [grid-coordinates.com/.../demo.sass](https://github.com/adamstac/grid-coordinates.com/blob/master/themes/grid-coordinates/sass/demo.sass) for a demonstration of how to use Grid Coordinates as well its [output CSS](https://github.com/adamstac/grid-coordinates.com/blob/master/themes/grid-coordinates/public/grid-coordinates/css/demo.css).

### Configure as needed and import

    // Configure grid coordinates
    $grid-columns: 12
    $grid-width: 60px
    $grid-gutter-width: 20px
    
    @import "grid-coordinates"
    
    +grid-coordinates

You can also set `$overflow` to false (set to true by default) to control which of Compass' two clearfix mixins will be used, `+clearfix` or `+pie-clearfix`. The default setting is `true` and will not clip any content that overflows a grid block. If for some reason you need to clip overflowing content, set `$overflow` to false in your configuration.

### Using classes and `@extend`

When you use the mixin `+grid-coordinates` (as shown above) you are able to leverage the CSS class selectors in your HTML markup or use the Sass `extend` option to "extend" the class selectors in your Sass stylesheets.

For an example of this in use, look at [grid-coordinates.com/.../demo.sass](https://github.com/adamstac/grid-coordinates.com/blob/master/themes/grid-coordinates/sass/demo.sass).

`@extend .grid-container`

`@extend .nested-grid-container`

`@extend .grid-[columns]`

`@extend .grid-prefix-[columns]`

`@extend .grid-suffix-[columns]`

`@extend .grid-push-[columns]`

`@extend .grid-pull-[columns]`

`@extend .grid-full`

### Using mixins

Regardless if go the route of using the mixin `+grid-coordinates` (as shown above) or not, you'll have access to use these mixins in your Sass stylesheets. Keep in mind that when you go the route of using mixins, you could end up replicating a lot of code in your output CSS. Learn more about the [Sass extend concept](http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#extend) to see if you should use that method or mixins. Either way, Grid Coordinates got your back.

`+grid-container`

`+nested-grid-container`

`+grid([columns])`

`+grid-prefix([columns])`

`+grid-suffix([columns])`

`+grid-push([columns])`

`+grid-pull([columns])`

`+grid-full`

### Advanced usage of prefix and suffix

More advanced users may appreciate the ability to use margin instead of padding when using the prefix and suffix feature. For example `@extend .grid-prefix-margin-3` or as a mixin `+grid-prefix(3,margin)`. Likewise, suffix would be `@extend .grid-suffix-margin-3` or as a mixin `+grid-suffix(3,margin)`.

## License

Copyright (c) 2009 Adam Stacoviak

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.